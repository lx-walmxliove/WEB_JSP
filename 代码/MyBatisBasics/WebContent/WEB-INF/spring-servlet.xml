<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
        				http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-4.1.xsd
        				http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">
    
    <!-- 开启注解包扫描-->
	<context:component-scan	base-package="Controllers" />

	<!-- 配置<mvc:default-servlet-handler />后
		Spring 会自动在上下文中定义一个 DefaultServletHttpRequestHandler，
		它会对所有进入 DispatcherServlet 的 URL 进行筛查，
		如果发现是静态资源的请求，就将该请求转发给 Web 应用服务器默认的 Servlet 处理，
		如果不是静态资源的请求，则仍由 DispatcherServlet 继续处理。
	-->
	<mvc:default-servlet-handler />
	
	<!-- 配置<mvc:annotation-driven />后
		该配置会自动注册 DefaultAnnotationHandlerMapping 
		与 AnnotationMethodHandlerAdapter 两个 bean，
		用以支持 @Controller 注解，并额外提供了数据绑定、参数转换、json 转换等功能。
	-->	
	<mvc:annotation-driven />	

	<!-- 可以做非缺省设置
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	-->

</beans>